/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 C:\Users\Ryo\AppData\Roaming\Blender Foundation\Blender\4.2\scripts\addons\midi-to-keyframes\docs\static\models\MIDI Piano 3D - Piano Keys Transparent -V1 - Apple Market Baked.glb -t 
*/

import React, { JSX, useEffect, useRef, useState } from "react";
import { useGLTF, useAnimations } from "@react-three/drei";
import { GLTF } from "three-stdlib";
import PianoKey from "../Ryoturia/PianoKey";
import { AnimationClip, Group, Mesh, MeshStandardMaterial } from "three";
import { useMIDIAnimationStore } from "@site/src/store/midi-animation";

type ActionName = "Scene";

interface GLTFAction extends AnimationClip {
  name: ActionName;
}

type GLTFResult = GLTF & {
  nodes: {
    WhiteKeyC: Mesh;
    ["BlackKeyC#"]: Mesh;
    ["BlackKeyG#"]: Mesh;
    WhiteKeyD: Mesh;
    WhiteKeyE: Mesh;
    WhiteKeyF: Mesh;
    WhiteKeyG: Mesh;
    WhiteKeyA: Mesh;
    WhiteKeyB: Mesh;
    ["BlackKeyD#"]: Mesh;
    ["BlackKeyF#"]: Mesh;
    ["BlackKeyA#"]: Mesh;
  };
  materials: {
    ["PianoKey.White"]: MeshStandardMaterial;
    ["PianoKey.Black"]: MeshStandardMaterial;
  };
  animations: GLTFAction[];
};

export function PianoKeys(props: JSX.IntrinsicElements["group"]) {
  const group = useRef<Group>(null);
  // @ts-ignore
  const { nodes, materials, animations } = useGLTF(
    "/blender-midi-motion/models/MIDI Piano 3D - Piano Keys Transparent -V2 - Mozart Sonata 16 Scale Snippet.glb"
  ) as GLTFResult;
  const { actions } = useAnimations(animations, group);
  const { playing, setPlaying, setCurrentAnimation } = useMIDIAnimationStore();

  const startAnimation = () => {
    const actionMap = Object.values(actions);
    console.log("toggling animation", actionMap);
    // Loop through each object and start it's animation
    if (playing) {
      actionMap.forEach((action) => {
        action.paused = false;
      });
    } else {
      actionMap.forEach((action) => {
        action.play();

        setCurrentAnimation(action);
      });
    }

    setPlaying(!playing);
  };

  useEffect(() => {
    startAnimation();
  }, []);
  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Scene">
        <PianoKey
          name="WhiteKeyC"
          geometry={nodes.WhiteKeyC.geometry}
          material={materials["PianoKey.White"]}
          position={[-0.488, 0.901, -5.421]}
        />
        <PianoKey
          name="BlackKeyC#"
          geometry={nodes["BlackKeyC#"].geometry}
          material={materials["PianoKey.Black"]}
          position={[-0.096, 1.014, -5.417]}
          black
        />
        <PianoKey
          name="BlackKeyG#"
          geometry={nodes["BlackKeyG#"].geometry}
          material={materials["PianoKey.Black"]}
          position={[4.304, 1.014, -5.417]}
          black
        />
        <PianoKey
          name="WhiteKeyD"
          geometry={nodes.WhiteKeyD.geometry}
          material={materials["PianoKey.White"]}
          position={[0.578, 0.901, -5.421]}
        />
        <PianoKey
          name="WhiteKeyE"
          geometry={nodes.WhiteKeyE.geometry}
          material={materials["PianoKey.White"]}
          position={[1.644, 0.901, -5.421]}
        />
        <PianoKey
          name="WhiteKeyF"
          geometry={nodes.WhiteKeyF.geometry}
          material={materials["PianoKey.White"]}
          position={[2.71, 0.901, -5.421]}
        />
        <PianoKey
          name="WhiteKeyG"
          geometry={nodes.WhiteKeyG.geometry}
          material={materials["PianoKey.White"]}
          position={[3.775, 0.901, -5.421]}
        />
        <PianoKey
          name="WhiteKeyA"
          geometry={nodes.WhiteKeyA.geometry}
          material={materials["PianoKey.White"]}
          position={[4.841, 0.901, -5.421]}
        />
        <PianoKey
          name="WhiteKeyB"
          geometry={nodes.WhiteKeyB.geometry}
          material={materials["PianoKey.White"]}
          position={[5.907, 0.901, -5.421]}
        />
        <PianoKey
          name="BlackKeyD#"
          geometry={nodes["BlackKeyD#"].geometry}
          material={materials["PianoKey.Black"]}
          position={[1.111, 1.014, -5.417]}
          black
        />
        <PianoKey
          name="BlackKeyF#"
          geometry={nodes["BlackKeyF#"].geometry}
          material={materials["PianoKey.Black"]}
          position={[3.217, 1.014, -5.417]}
          black
        />
        <PianoKey
          name="BlackKeyA#"
          geometry={nodes["BlackKeyA#"].geometry}
          material={materials["PianoKey.Black"]}
          position={[5.357, 1.014, -5.417]}
          black
        />
      </group>
    </group>
  );
}

export default PianoKeys;

useGLTF.preload(
  "/blender-midi-motion/models/MIDI Piano 3D - Piano Keys Transparent -V1 - Apple Market Baked.glb"
);
